package ch08.고차함수

/**
 * 람다를 로컬 변수에 대입해보자.
 * 컴파일러는 sum이 함수 타입임을 추론한다.
 */

val sum = { x: Int, y: Int -> x + y }

/**
 * 구체적인 타입을 추가할 수 있다.
 * 함수 타입을 정의하려면 함수 파라미터의 타입을 괄호 안에 넣고, 그 뒤에 화살표(->)를 추가한 다음, 함수의 반환 타입을 지정하면 된다.
 * 함수 타입을 지정하면 함수 타입에 있는 파라미터로부터 람다의 파라미터 타입을 유추할 수 있다.
 * 따라서 람다에 파라미터 타입을 생략해도 된다.
 */
val sum1: (Int, Int) -> Int = { x, y -> x + y }

/**
 * Unit 타입은 의미 있는 값을 반환하지 않는 함수 반환 타입에 쓰는 특별한 타입이다.
 */
val action: () -> Unit = { println("42") }

fun main() {
    sum(10, 20)
    sum1(10, 20)
    action()
}
